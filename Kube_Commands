#KubeCommands

#Delete all unnamed images
docker rmi $(docker images | grep "^<none>" | awk "{print $3}")

#Check minikube
minikube status

minikube start --driver=none

#Check minikube is running
minikube status

#Check all docker images exist
docker images

#If images are missing get to appropriate folder and run terminal
docker build --tag customer-api:v1.0 .
docker build --tag security-api:v1.0 .


#Create deployments
kubectl create deployment security-api --image=security-api:v1.0
kubectl create deployment customer-api --image=customer-api:v1.0

#Check deployments and pods
kubectl get all

#Expose ports
kubectl expose deployment security-api --type=LoadBalancer --port=8081
kubectl expose deployment customer-api --type=LoadBalancer --port=8080

#Check ip address
kubectl get all

#Set API_HOST to ip and port of customer-api
kubectl set env deployment.apps/security-api API_HOST=XX.XXX.XXX.XXX:8080

#Edit ips in setupProxy.js and default.conf file in react-client folder

#Navigate to react folder and build react image
docker build --tag react-client:v1.0 .

#Create deployment
kubectl create deployment react-client --image=react-client:v1.0

#Expose port
kubectl expose deployment react-client --type=LoadBalancer --port=80

#Check service and use ip of react-client in browser
kubectl get services

#Scale deployments
kubectl scale deployment.apps/security-api --replicas=3
kubectl scale deployment.apps/customer-api --replicas=3
kubectl scale deployment.apps/react-client --replicas=3

#Check pods and deployments
kubectl get all

#Delete all services
kubectl delete service security-api
kubectl delete service customer-api
kubectl delete service react-client


#Delete all deployments
kubectl delete deployment security-api
kubectl delete deployment customer-api
kubectl delete deployment react-client

#Stop and delete
minikube stop
minikube delete

exit and closeout terminal
